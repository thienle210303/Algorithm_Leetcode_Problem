Problem: find two number in the array that sum equal to the target number
Extra: less than O(n^2) time complexity

Normal level: for loop

public int[] twoSum(int[] nums, int target) {
  for(int i = 0; i<nums.length; i++)
  {
    for(int j = i+1; j<nums.length;j++)
    {
      if(nums[j] == target - nums[i])
        return new int[] {i,j};
    }
  }
  return null;
 }
}

Advance: hashmap O(n)
  public int[] twoSum(int[] nums, int target) {
  int n = nums.length;
  Map<Integer, Integer> map = new HashMap<>();
  int[] result = new int[2];
  for(int i = 0; i<n; i++)
  {
    if(map.containsKey(target-nums[i]))
    {
      result[1] = i;
      result[0] = map.get(target-nums[i]);
      return result;
    }
    map.put(nums[i],i);
  }
  return result;
 }
}


